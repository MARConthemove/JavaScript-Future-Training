{"id":"CountInput.js","dependencies":[{"name":"/Users/marconthemove/code/MARConthemove/jsFutureTraining/React/counter/package.json","includedInParent":true,"mtime":1630583547059},{"name":"react","loc":{"line":1,"column":32},"parent":"/Users/marconthemove/code/MARConthemove/jsFutureTraining/React/counter/CountInput.js","resolved":"/Users/marconthemove/code/MARConthemove/jsFutureTraining/React/counter/node_modules/react/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CountInput = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n// props = properties (eigenschaften von der jeweiligen React Komponente (function()))\nvar CountInput = function CountInput(props) {\n  // getter und setter -> zum besseren verÃ¤ndern der Werte (Objektorientierte Programmierung!)\n  var _useState = (0, _react.useState)(props.amount || 1),\n      _useState2 = _slicedToArray(_useState, 2),\n      amount = _useState2[0],\n      setAmount = _useState2[1];\n\n  return /*#__PURE__*/_react.default.createElement(\"span\", null, /*#__PURE__*/_react.default.createElement(\"button\", {\n    onClick: function onClick() {\n      return setAmount(amount - 1);\n    },\n    disabled: amount <= 1\n  }, \"-\"), /*#__PURE__*/_react.default.createElement(\"span\", {\n    style: {\n      width: \"30px\",\n      color: \"cornflowerblue\"\n    }\n  }, \"\\xA0\", amount, \" \\xD7\\xA0\"), /*#__PURE__*/_react.default.createElement(\"button\", {\n    onClick: function onClick() {\n      return setAmount(Number(amount) + 1);\n    },\n    disabled: amount >= 9\n  }, \"+\"));\n};\n\nexports.CountInput = CountInput;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"CountInput.js","original":{"line":1,"column":0}},{"generated":{"line":26,"column":0},"source":"CountInput.js","original":{"line":3,"column":0}},{"generated":{"line":27,"column":0},"source":"CountInput.js","original":{"line":4,"column":7}},{"name":"CountInput","generated":{"line":27,"column":4},"source":"CountInput.js","original":{"line":4,"column":13}},{"generated":{"line":27,"column":14},"source":"CountInput.js","original":{"line":4,"column":23}},{"generated":{"line":27,"column":17},"source":"CountInput.js","original":{"line":4,"column":26}},{"name":"CountInput","generated":{"line":27,"column":26},"source":"CountInput.js","original":{"line":4,"column":13}},{"generated":{"line":27,"column":36},"source":"CountInput.js","original":{"line":4,"column":26}},{"name":"props","generated":{"line":27,"column":37},"source":"CountInput.js","original":{"line":4,"column":26}},{"generated":{"line":27,"column":42},"source":"CountInput.js","original":{"line":4,"column":31}},{"generated":{"line":27,"column":44},"source":"CountInput.js","original":{"line":4,"column":35}},{"generated":{"line":28,"column":0},"source":"CountInput.js","original":{"line":5,"column":4}},{"generated":{"line":29,"column":0},"source":"CountInput.js","original":{"line":6,"column":4}},{"generated":{"line":29,"column":18},"source":"CountInput.js","original":{"line":6,"column":32}},{"name":"props","generated":{"line":29,"column":39},"source":"CountInput.js","original":{"line":6,"column":41}},{"generated":{"line":29,"column":44},"source":"CountInput.js","original":{"line":6,"column":46}},{"name":"amount","generated":{"line":29,"column":45},"source":"CountInput.js","original":{"line":6,"column":47}},{"generated":{"line":29,"column":51},"source":"CountInput.js","original":{"line":6,"column":41}},{"generated":{"line":29,"column":55},"source":"CountInput.js","original":{"line":6,"column":57}},{"generated":{"line":29,"column":56},"source":"CountInput.js","original":{"line":6,"column":32}},{"generated":{"line":29,"column":57},"source":"CountInput.js","original":{"line":6,"column":4}},{"generated":{"line":30,"column":0},"source":"CountInput.js","original":{"line":6,"column":4}},{"generated":{"line":31,"column":0},"source":"CountInput.js","original":{"line":6,"column":4}},{"name":"amount","generated":{"line":31,"column":6},"source":"CountInput.js","original":{"line":6,"column":11}},{"generated":{"line":31,"column":12},"source":"CountInput.js","original":{"line":6,"column":4}},{"generated":{"line":32,"column":0},"source":"CountInput.js","original":{"line":6,"column":4}},{"name":"setAmount","generated":{"line":32,"column":6},"source":"CountInput.js","original":{"line":6,"column":19}},{"generated":{"line":32,"column":15},"source":"CountInput.js","original":{"line":6,"column":4}},{"generated":{"line":34,"column":0},"source":"CountInput.js","original":{"line":8,"column":4}},{"generated":{"line":34,"column":22},"source":"CountInput.js","original":{"line":9,"column":8}},{"generated":{"line":34,"column":78},"source":"CountInput.js","original":{"line":10,"column":12}},{"generated":{"line":35,"column":0},"source":"CountInput.js","original":{"line":11,"column":16}},{"generated":{"line":35,"column":4},"source":"CountInput.js","original":{"line":11,"column":16}},{"generated":{"line":35,"column":11},"source":"CountInput.js","original":{"line":11,"column":23}},{"generated":{"line":35,"column":13},"source":"CountInput.js","original":{"line":11,"column":25}},{"generated":{"line":36,"column":0},"source":"CountInput.js","original":{"line":11,"column":25}},{"name":"setAmount","generated":{"line":36,"column":13},"source":"CountInput.js","original":{"line":11,"column":31}},{"generated":{"line":36,"column":22},"source":"CountInput.js","original":{"line":11,"column":40}},{"name":"amount","generated":{"line":36,"column":23},"source":"CountInput.js","original":{"line":11,"column":41}},{"generated":{"line":36,"column":29},"source":"CountInput.js","original":{"line":11,"column":47}},{"generated":{"line":36,"column":32},"source":"CountInput.js","original":{"line":11,"column":50}},{"generated":{"line":36,"column":33},"source":"CountInput.js","original":{"line":11,"column":40}},{"generated":{"line":36,"column":34},"source":"CountInput.js","original":{"line":11,"column":25}},{"generated":{"line":37,"column":0},"source":"CountInput.js","original":{"line":11,"column":25}},{"generated":{"line":37,"column":5},"source":"CountInput.js","original":{"line":10,"column":12}},{"generated":{"line":38,"column":0},"source":"CountInput.js","original":{"line":12,"column":16}},{"generated":{"line":38,"column":4},"source":"CountInput.js","original":{"line":12,"column":16}},{"generated":{"line":38,"column":12},"source":"CountInput.js","original":{"line":12,"column":24}},{"name":"amount","generated":{"line":38,"column":14},"source":"CountInput.js","original":{"line":12,"column":26}},{"generated":{"line":38,"column":20},"source":"CountInput.js","original":{"line":12,"column":32}},{"generated":{"line":38,"column":24},"source":"CountInput.js","original":{"line":12,"column":36}},{"generated":{"line":39,"column":0},"source":"CountInput.js","original":{"line":10,"column":12}},{"generated":{"line":39,"column":9},"source":"CountInput.js","original":{"line":9,"column":8}},{"generated":{"line":39,"column":24},"source":"CountInput.js","original":{"line":16,"column":12}},{"generated":{"line":40,"column":0},"source":"CountInput.js","original":{"line":16,"column":18}},{"generated":{"line":40,"column":4},"source":"CountInput.js","original":{"line":16,"column":18}},{"generated":{"line":40,"column":9},"source":"CountInput.js","original":{"line":16,"column":23}},{"generated":{"line":40,"column":11},"source":"CountInput.js","original":{"line":16,"column":25}},{"name":"width","generated":{"line":41,"column":0},"source":"CountInput.js","original":{"line":16,"column":27}},{"name":"width","generated":{"line":41,"column":6},"source":"CountInput.js","original":{"line":16,"column":27}},{"generated":{"line":41,"column":11},"source":"CountInput.js","original":{"line":16,"column":32}},{"generated":{"line":41,"column":13},"source":"CountInput.js","original":{"line":16,"column":34}},{"generated":{"line":41,"column":19},"source":"CountInput.js","original":{"line":16,"column":25}},{"name":"color","generated":{"line":42,"column":0},"source":"CountInput.js","original":{"line":16,"column":42}},{"name":"color","generated":{"line":42,"column":6},"source":"CountInput.js","original":{"line":16,"column":42}},{"generated":{"line":42,"column":11},"source":"CountInput.js","original":{"line":16,"column":47}},{"generated":{"line":42,"column":13},"source":"CountInput.js","original":{"line":16,"column":49}},{"generated":{"line":43,"column":0},"source":"CountInput.js","original":{"line":16,"column":25}},{"generated":{"line":44,"column":0},"source":"CountInput.js","original":{"line":16,"column":12}},{"name":"amount","generated":{"line":44,"column":13},"source":"CountInput.js","original":{"line":17,"column":23}},{"generated":{"line":44,"column":19},"source":"CountInput.js","original":{"line":16,"column":12}},{"generated":{"line":44,"column":33},"source":"CountInput.js","original":{"line":9,"column":8}},{"generated":{"line":44,"column":48},"source":"CountInput.js","original":{"line":19,"column":12}},{"generated":{"line":45,"column":0},"source":"CountInput.js","original":{"line":20,"column":16}},{"generated":{"line":45,"column":4},"source":"CountInput.js","original":{"line":20,"column":16}},{"generated":{"line":45,"column":11},"source":"CountInput.js","original":{"line":20,"column":23}},{"generated":{"line":45,"column":13},"source":"CountInput.js","original":{"line":20,"column":25}},{"generated":{"line":46,"column":0},"source":"CountInput.js","original":{"line":20,"column":25}},{"name":"setAmount","generated":{"line":46,"column":13},"source":"CountInput.js","original":{"line":20,"column":31}},{"generated":{"line":46,"column":22},"source":"CountInput.js","original":{"line":20,"column":40}},{"name":"Number","generated":{"line":46,"column":23},"source":"CountInput.js","original":{"line":20,"column":41}},{"generated":{"line":46,"column":29},"source":"CountInput.js","original":{"line":20,"column":47}},{"name":"amount","generated":{"line":46,"column":30},"source":"CountInput.js","original":{"line":20,"column":48}},{"generated":{"line":46,"column":36},"source":"CountInput.js","original":{"line":20,"column":47}},{"generated":{"line":46,"column":37},"source":"CountInput.js","original":{"line":20,"column":41}},{"generated":{"line":46,"column":40},"source":"CountInput.js","original":{"line":20,"column":58}},{"generated":{"line":46,"column":41},"source":"CountInput.js","original":{"line":20,"column":40}},{"generated":{"line":46,"column":42},"source":"CountInput.js","original":{"line":20,"column":25}},{"generated":{"line":47,"column":0},"source":"CountInput.js","original":{"line":20,"column":25}},{"generated":{"line":47,"column":5},"source":"CountInput.js","original":{"line":19,"column":12}},{"generated":{"line":48,"column":0},"source":"CountInput.js","original":{"line":21,"column":16}},{"generated":{"line":48,"column":4},"source":"CountInput.js","original":{"line":21,"column":16}},{"generated":{"line":48,"column":12},"source":"CountInput.js","original":{"line":21,"column":24}},{"name":"amount","generated":{"line":48,"column":14},"source":"CountInput.js","original":{"line":21,"column":26}},{"generated":{"line":48,"column":20},"source":"CountInput.js","original":{"line":21,"column":32}},{"generated":{"line":48,"column":24},"source":"CountInput.js","original":{"line":21,"column":36}},{"generated":{"line":49,"column":0},"source":"CountInput.js","original":{"line":19,"column":12}},{"generated":{"line":49,"column":9},"source":"CountInput.js","original":{"line":9,"column":8}},{"generated":{"line":49,"column":10},"source":"CountInput.js","original":{"line":8,"column":4}},{"generated":{"line":50,"column":0},"source":"CountInput.js","original":{"line":27,"column":1}},{"generated":{"line":50,"column":1},"source":"CountInput.js","original":{"line":4,"column":7}}],"sources":{"CountInput.js":"import React, { useState } from \"react\"\n\n// props = properties (eigenschaften von der jeweiligen React Komponente (function()))\nexport const CountInput = props => {\n    // getter und setter -> zum besseren verÃ¤ndern der Werte (Objektorientierte Programmierung!)\n    const [amount, setAmount] = useState(props.amount || 1)\n\n    return (\n        <span>\n            <button\n                onClick={() => setAmount(amount - 1)}\n                disabled={amount <= 1}\n            >\n                -\n            </button>\n            <span style={{ width: \"30px\", color: \"cornflowerblue\" }}>\n                &nbsp;{amount} &times;&nbsp;\n            </span>\n            <button\n                onClick={() => setAmount(Number(amount) + 1)}\n                disabled={amount >= 9}\n            >\n                +\n            </button>\n        </span>\n    )\n}\n"},"lineCount":null}},"error":null,"hash":"fe965b507d2adec938da06ed16616887","cacheData":{"env":{}}}